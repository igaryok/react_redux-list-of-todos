{"version":3,"sources":["components/User/User.js","api/index.js","store/index.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["User","_ref","name","email","react_default","a","createElement","Fragment","className","concat","URL","getDataServer","urlParam","fetch","then","respons","json","ACTION_TYPES","DELETE_TODO","LOAD_DATA","START_LOAD","HAS_ERROR","loadData","todos","users","type","startLoad","errorOccur","initialState","isLoading","hasError","getTodos","state","store","createStore","arguments","length","undefined","action","_objectSpread","Object","toConsumableArray","filter","item","id","idForDelete","applyMiddleware","thunk","connect","dispatch","deleteItem","deleteTodo","todo","completed","title","user","classItem","classNames","disabled","onClick","event","Number","target","components_User_User","map","components_TodoItem_TodoItem","key","Promise","all","_ref2","slicedToArray","listTodo","listUsers","find","person","userId","catch","buttonText","role","components_TodoList_TodoList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.13005b74.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name, email }) => (\n  <>\n    <span className=\"li-user\">User</span>\n    {` : ${name} (${email})`}\n  </>\n);\n\nexport default User;\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","const URL = 'https://jsonplaceholder.typicode.com/';\n\nfunction getDataServer(urlParam) {\n  return fetch(`${URL}${urlParam}`)\n    .then(respons => respons.json());\n}\n\nexport default getDataServer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport getDataServer from '../api';\n\nexport const loadTodosAndUsers = () => (dispatch) => {\n  dispatch(startLoad());\n  return Promise.all([\n    getDataServer('todos'),\n    getDataServer('users')])\n    .then(([listTodo, listUsers]) => {\n      const todos = listTodo\n        .map(item => ({\n          ...item, user: listUsers.find(person => person.id === item.userId),\n        }));\n\n      dispatch(loadData(todos, listUsers));\n    })\n    .catch(() => dispatch(errorOccur()));\n};\n\nexport const ACTION_TYPES = {\n  DELETE_TODO: 'DELETE_TODO',\n  LOAD_DATA: 'LOAD_DATA',\n  START_LOAD: 'START_LOAD',\n  HAS_ERROR: 'HAS_ERROR',\n};\n\nexport const deleteTodo = id => ({\n  type: ACTION_TYPES.DELETE_TODO,\n  idForDelete: id,\n});\n\nexport const loadData = (todos, users) => ({\n  type: ACTION_TYPES.LOAD_DATA,\n  todos,\n  users,\n});\n\nexport const startLoad = () => ({\n  type: ACTION_TYPES.START_LOAD,\n});\n\nexport const errorOccur = () => ({\n  type: ACTION_TYPES.HAS_ERROR,\n});\n\nconst initialState = {\n  todos: [],\n  users: [],\n  isLoading: false,\n  hasError: false,\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.DELETE_TODO:\n      return ({\n        ...state,\n        todos: [...state.todos.filter(item => item.id !== action.idForDelete)],\n      });\n    case ACTION_TYPES.LOAD_DATA:\n      return ({\n        ...state,\n        todos: [...action.todos],\n        users: [...action.users],\n        isLoading: false,\n      });\n    case ACTION_TYPES.START_LOAD:\n      return ({\n        ...state,\n        isLoading: true,\n        hasError: false,\n      });\n    case ACTION_TYPES.HAS_ERROR:\n      return ({\n        ...state,\n        hasError: true,\n        isLoading: false,\n      });\n    default:\n      return state;\n  }\n}\n\nexport const getTodos = state => state.todos;\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoItem.css';\nimport User from '../User/User';\nimport { deleteTodo } from '../../store';\n\nconst TodoItem = ({ todo, deleteItem }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n  const classItem = classNames('task-container', { disabled: completed });\n\n  return (\n    <li className=\"list-group-item\">\n      <button\n        id={id}\n        type=\"button\"\n        className=\"btn btn-outline-danger btn-sm\"\n        title=\"Delete task\"\n        onClick={event => deleteItem(Number(event.target.id))}\n      >\n        x\n      </button>\n      <div className={classItem}>\n        <span className=\"li-task\">Task:&nbsp;</span>\n        {title}\n        &nbsp;|&nbsp;\n        <User {...user} />\n      </div>\n    </li>\n  );\n};\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n});\n\nTodoItem.propTypes = {\n  todo: shape.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nconst getMethod = dispatch => ({\n  deleteItem: id => dispatch(deleteTodo(id)),\n});\n\nexport default connect(\n  null,\n  getMethod,\n)(TodoItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { getTodos } from '../../store';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"list-group\">\n    {todos.map(item => <TodoItem todo={item} key={item.id} />)}\n  </ul>\n);\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(shape).isRequired,\n};\n\nconst getData = state => ({\n  todos: getTodos(state),\n});\n\nexport default connect(\n  getData\n)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport TodoList from './components/TodoList/TodoList';\nimport { loadTodosAndUsers } from './store';\n\nconst App = ({\n  todos,\n  users,\n  isLoading,\n  hasError,\n  loadData,\n}) => {\n  const buttonText = (hasError ? 'Try again' : 'Load todos');\n\n  return (\n    <div className=\"app\">\n      <h1>Static list of todos</h1>\n      {todos.length || (\n        <>\n          <p>\n            <strong>No yet todos</strong>\n          </p>\n\n          {hasError && (\n            <p>\n              <span className=\"badge badge-warning\">Error occurred!</span>\n            </p>\n          )\n          }\n\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => loadData()}\n            disabled={isLoading}\n          >\n            {isLoading\n              ? 'Loading...'\n              : buttonText\n            }\n          </button>\n        </>\n      )\n      }\n\n      {isLoading && (\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      )\n      }\n      <p>\n        <span>Todos: </span>\n        {todos.length}\n      </p>\n      <TodoList />\n      <p>\n        <span>Users: </span>\n        {users.length}\n      </p>\n    </div>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n  users: state.users,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nconst getMethod = dispatch => ({\n  loadData: () => dispatch(loadTodosAndUsers()),\n});\n\nconst userShape = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n};\n\nApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape(userShape),\n  })).isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape(userShape)).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  loadData: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  getData,\n  getMethod\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}